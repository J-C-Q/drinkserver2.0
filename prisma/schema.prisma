// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// prisma/schema.prisma
datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum UserRole {
    USER
    ADMIN
}

enum OrderStatus {
    PENDING
    COMPLETED
    CANCELLED
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    role          UserRole  @default(USER)
    accounts      Account[]
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model VerificationToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model PasswordResetToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model Order {
    orderId   String      @id @default(cuid())
    userId    String
    itemid    String
    itemname  String
    itemprice Float
    date      DateTime
    status    OrderStatus @default(PENDING)
}

model Item {
    itemid       String  @id @default(cuid())
    itemname     String
    itemprice    Float
    quantity     Int
    energy       Float?
    carbohydrate Float?
    sugar        Float?
    caffeine     Float?
    image        String?
    description  String?
    bgcolor      String?
    color        String?
}
